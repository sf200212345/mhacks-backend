/*foreign keys are disabled by default, so we need to turn it on if we need it*/
PRAGMA foreign_keys = ON;

create table user(
    id INTEGER PRIMARY KEY,
    username VARCHAR(40) NOT NULL
);

/* this is the user-described description of the product, like camera or computer*/
create table product_description(
    id INTEGER PRIMARY KEY,
    product_description TEXT NOT NULL,
    scraped_text TEXT
);

/* this table stores actual products with the product description, like a macbook pro m3 2023 corresponds to a 
description of a computer*/
create table product(
    id INTEGER PRIMARY KEY,
    product_code TEXT NOT NULL,
    product_description_id INTEGER NOT NULL,
    FOREIGN KEY(product_description_id) REFERENCES product_description(id)
);

/* these are factors that the user will give feedback to the AI, like camera size or computer storage*/
/* These ARE NOT the factors of real products. So things like "large size" or "256 GB" will not be stored here*/
create table product_factor(
    id INTEGER PRIMARY KEY,
    product_description_id INTEGER NOT NULL,
    /* store the user input for this factor and product */
    user_input TEXT,
    factor_name TEXT NOT NULL,
    FOREIGN KEY(product_description_id) REFERENCES product_description(id)
);

/* message thread user id cannot be 0, because 0 is reserved for the AI */
create table message_thread(
    id INTEGER PRIMARY KEY,
    user_id INTEGER NOT NULL,
    /*no product id means no product was identified*/
    product_description_id INTEGER,
    FOREIGN KEY(user_id) REFERENCES user(id),
    FOREIGN KEY(product_description_id) REFERENCES product_description(id)
);

create table message(
    id INTEGER PRIMARY KEY,
    message_thread_id INTEGER NOT NULL,
    message_content TEXT NOT NULL,
    FOREIGN KEY(message_thread_id) REFERENCES message_thread(id)
);

/*The following two tables are:
1. the rating of a real product's factor generated by the AI (like 50% match on camera size for the nikon 721)
2. the generated read product's factor value and description (like "large" for camera size and
a small description of what camera size refers to)*/
create table product_factor_rating(
    id INTEGER PRIMARY KEY,
    product_factor_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    generated_rating INTEGER NOT NULL,
    FOREIGN KEY(product_factor_id) REFERENCES product_factor(id),
    FOREIGN KEY(product_id) REFERENCES product(id)
);

create table generated_product_factor(
    id INTEGER PRIMARY KEY,
    product_factor_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    generated_value TEXT NOT NULL,
    generated_description TEXT NOT NULL,
    FOREIGN KEY(product_factor_id) REFERENCES product_factor(id),
    FOREIGN KEY(product_id) REFERENCES product(id)
);

/*user with id=0 refers to the AI prompter*/
insert into user(id, username) values(0, "AI");